.TH CLASSIFY.SEQS 1 2022-05-07 "" "Do OTU annotation based on the reference database"
.SH NAME
classify.seqs \- classify.seqs(fasta, reference, taxonomy, method = knn, numwanted = 3, processors = 2, logfile = [14]classify.seqs.txt)
.SH SYNOPSIS
\fIclassify.seqs(fasta, reference, taxonomy, method = knn, numwanted = 3, processors = 2, logfile = [14]classify.seqs.txt)\fR
.SH OPTIONS
.PP
\fBfasta\fB \fR\- . 
.PP
.PP
\fBreference\fB \fR\- . 
.PP
.PP
\fBtaxonomy\fB \fR\- . 
.PP
.PP
\fBmethod\fB \fR\- knn. 
.PP
.PP
\fBnumwanted\fB \fR\- 3. 
.PP
.PP
\fBprocessors\fB \fR\- 2. 
.PP
.PP
\fBlogfile\fB \fR\- [14]classify.seqs.txt. 
.PP
.SH DETAILS
.PP
The classify.seqs command allows the user to use several different methods to assign their sequences to the taxonomy outline of their choice. Current methods include the Wang approach, using a k-nearest neighbor consensus and zap. Taxonomy outlines and reference sequences can be obtained from the taxonomy outline page. The command requires that you provide a fasta-formatted input and database sequence file and a taxonomy file for the reference sequences.
.PP
.SH FILES
.PP
SMRUCC/R#.declare_function.classify.seqs at mothur.R:line 397
.PP
.SH COPYRIGHT
Copyright © xieguigang <xie.guigang@gcmodeller.org>, MIT Licensed 2022
